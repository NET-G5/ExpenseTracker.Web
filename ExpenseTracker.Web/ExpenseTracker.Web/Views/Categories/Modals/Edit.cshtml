@using ExpenseTracker.Web.ViewModels.Category
@model CategoryViewModel;

<div class="modal fade" id="updateCategoryModal" tabindex="-1" aria-labelledby="updateCategoryModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header d-flex justify-content-center">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body">
                <form id="updateCategoryForm" asp-action="Edit" method="post">
                    <input type="hidden" id="categoryIdEdit" name="Id">
                    <div class='e-btn-group custom-rbt-group mb-3'>
                        <input type="radio" id="radioleft" name="Type" value="Expense" checked="@(Model == null || Model.Type == ExpenseTracker.Web.Enums.CategoryType.Expense)" />
                        <label class="e-btn e-btn-danger" for="radioleft">Expense</label>
                        <input type="radio" id="radiomiddle" name="Type" value="Income" checked="@(Model?.Type == ExpenseTracker.Web.Enums.CategoryType.Income)" />
                        <label class="e-btn e-btn-success" for="radiomiddle">Income</label>
                    </div>
                    <div class="mb-3">
                        <ejs-textbox type="text" placeholder="Name" floatLabelType="Always" class="form-control" id="categoryNameEdit" name="Name" required />
                    </div>
                    <div class="mb-5">
                        <ejs-textbox type="text" placeholder="Note" floatLabelType="Always" multiline=true class="form-control" id="categoryDescriptionEdit" name="Description" />
                    </div>
                    <div class="d-grid gap-3">
                        <button type="submit" class="btn btn-success" id="submitBtn" onclick="confirmUpdateCategory()">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function openUpdateModal(id) {
        $.ajax({
            type: 'GET',
            url: `/categories/details/${id}`,

            success: function (data) {
                console.log(data);
                $('#categoryIdEdit').val(data.Id);
                $('#categoryNameEdit').val(data.Name);
                $('#categoryTypeEdit').val(data.Type);
                
                $('#categoryDescriptionEdit').text(data.Description);

                $('#updateCategoryModal').modal('show');
            },
            error: function (error) {
                console.log('Error fetching category details:', error);
            }
        });
    };

    function confirmUpdateCategory() {
        var formData = $('#updateCategoryForm').serialize();
        var id = $('#categoryIdEdit').val();
        var token = $('input[name="__RequestVerificationToken"]').val();

        $.ajax({
            type: 'POST',
            url: '/categories/edit/' + id,
            headers: {
                'RequestVerificationToken': token
            },
            data: formData,
            success: function (response) {
                if (response.success) {
                    $('#updateCategoryModal').modal('hide');

                    loadCategories()
                } else {
                    console.log('Edit failed:', response.errors);
                    alert('Update failed. Please try again.');
                }
            },
            error: function (error) {
                console.log('Error updating category:', error);
                alert('Error updating category');
            }
        });
    }

</script>

<script>
    $('#updateCategoryModal').on('click', function (e) {
        if ($(e.target).is('#updateCategoryModal')) {
            const modalContent = $(this).find('.modal-content');
            modalContent.addClass('shake');
            setTimeout(() => {
                modalContent.removeClass('shake');
            }, 500);
        }
    });
</script>
