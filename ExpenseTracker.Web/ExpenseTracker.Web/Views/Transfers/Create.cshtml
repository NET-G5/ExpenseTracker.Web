@model ExpenseTracker.Web.Requests.Transfer.CreateTransferRequest

@{
    ViewData["PageTitle"] = "Create new transaction";
    Layout = "~/Views/Shared/_ModalForLayout.cshtml";
}

<form asp-action="Create" enctype="multipart/form-data" method="post" id="transfer-form">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="mb-3">
        <ejs-textbox id="title" placeholder="Title" ejs-for="Title"
                     floatLabelType="Always" required></ejs-textbox>
    </div>
    <div class="d-flex justify-content-between gap-4  mb-4">
        <div class="w-100">
            <ejs-combobox id="wallets-combobox"
                          name="WalletId"
                          filterType="Contains"
                          allowFiltering="true"
                          allowObjectBinding="true"
                          ignoreAccent="true"
                          dataSource="@ViewBag.Wallets"
                          placeholder="Select a wallet"
                          popupHeight="220px"
                          value="@ViewBag.DefaultWallet"
                          floatLabelType="Always" required>
                <e-combobox-fields value="Id" text="Name"></e-combobox-fields>
            </ejs-combobox>
            <span asp-validation-for="WalletId" class="text-danger fs-6"></span>
        </div>
        <div class="w-100">
            <ejs-combobox id="categories-combobox"
                          name="categoryId"
                          filterType="Contains"
                          allowFiltering="true"
                          allowObjectBinding="true"
                          ignoreAccent="true"
                          dataSource="@ViewBag.Categories"
                          placeholder="Select a category"
                          popupHeight="220px"
                          value="@ViewBag.DefaultCategory"
                          floatLabelType="Always" required>
                <e-combobox-fields value="Id" text="Name"></e-combobox-fields>
            </ejs-combobox>
            <span asp-validation-for="CategoryId" class="text-danger fs-6"></span>
        </div>
    </div>
    <div class="d-flex justify-content-between gap-4  mb-4">
        <div class="w-100">
            <ejs-numerictextbox id="amount"
                                ejs-for="Amount"
                                placeholder="Amount"
                                floatLabelType="Always"
                                min="1"
                                format="c0" required></ejs-numerictextbox>
            <span asp-validation-for="Amount" class="text-danger fs-6"></span>
        </div>
        <div class="w-100">
            <ejs-datepicker id="date"
                            placeholder="Select Date"
                            floatLabelType="Always"
                            ejs-for="Date"                            
                            format="dd/MM/yyyy" required>
            </ejs-datepicker>
        </div>
    </div>
    <div class="mb-3">
        <label for="image" class="form-label label-size">Attachments</label>
        <ejs-uploader id="upload-files"
                      autoUpload="false"
                      name="attachments" />
    </div>
    <div class="mb-3">
        <ejs-textbox id="note" placeholder="Notes" ejs-for="Notes"
                     floatLabelType="Always" multiline="true"></ejs-textbox>
    </div>
    <div class="d-grid">
        <ejs-button id="submit" type="submit" content="Submit" cssClass="e-success" onclick="validate()"></ejs-button>
    </div>
</form>

<script>
    function addFile() {
        if (fileList.length === 3) {
            alert('You selected three pictures.');
            return;
        }

        const fileInput = document.getElementById('fileInput');
        const fileList = document.getElementById('fileList');

        if (fileInput.files.length === 0) {
            alert('Please select a file first');
            return;
        }

        const fileName = fileInput.files[0].name;
        const listItem = document.createElement('li');

        listItem.innerHTML = `
                <span>${fileName}</span>
                <button onclick="removeFile(this)">Delete</button>
            `;

        fileList.appendChild(listItem);
        fileInput.value = '';
    }

    function removeFile(button) {
        const listItem = button.parentElement;
        listItem.remove();
    }
</script>